@using MESWebDev.Common
@using MESWebDev.Services
@inject ITranslationService TranslationService
@model IPagedResult
@{
    var languageCode = Context.Session.GetString("LanguageCode") ?? "vi";
    var controller = ViewContext.RouteData.Values["controller"].ToString();
    var action = ViewContext.RouteData.Values["action"].ToString();

    // Create a dictionary of all query parameters except 'page' and 'pageSize'
    var queryParams = new Dictionary<string, string>();
    foreach (var key in Context.Request.Query.Keys)
    {
        if (key != "page" && key != "pageSize")
        {
            queryParams[key] = Context.Request.Query[key].ToString();
        }
    }
    // Số trang tối đa hiển thị (bao gồm trang đầu và trang cuối)
    int maxPagesToShow = 10;
    int currentPage = Model.CurrentPage;
    int totalPages = Model.TotalPages;
    if (totalPages==0)
    {
         totalPages = (int)Math.Ceiling((double)Model.TotalItems / Model.PageSize);
    }
    // Tạo danh sách chứa các số trang cần hiển thị.
    // Sử dụng giá trị -1 để đánh dấu chỗ cần hiển thị dấu ellipsis
    var pages = new List<int>();

    // Luôn hiển thị trang 1
    pages.Add(1);
    if (totalPages > maxPagesToShow)
    {
        int midPagesCount = maxPagesToShow - 2; // trừ 2 trang đầu và trang cuối
        int startMid = currentPage - midPagesCount / 2;
        int endMid = currentPage + midPagesCount / 2;

        if (startMid < 2)
        {
            startMid = 2;
            endMid = startMid + midPagesCount - 1;
        }
        if (endMid > totalPages - 1)
        {
            endMid = totalPages - 1;
            startMid = endMid - midPagesCount + 1;
        }

        // Nếu khoảng cách giữa trang 1 và trang đầu tiên trong dãy giữa lớn hơn 1, hiển thị ellipsis
        if (startMid > 2)
        {
            pages.Add(-1); // -1 đại diện cho dấu "..."
        }

        for (int i = startMid; i <= endMid; i++)
        {
            pages.Add(i);
        }

        // Nếu khoảng cách giữa trang cuối cùng trong dãy giữa và trang cuối lớn hơn 1, hiển thị ellipsis
        if (endMid < totalPages - 1)
        {
            pages.Add(-1);
        }
        // Luôn hiển thị trang cuối cùng
        pages.Add(totalPages);
    }
    else
    {
        // Nếu tổng số trang không vượt quá maxPagesToShow, hiển thị tất cả
        for (int i = 2; i <= totalPages; i++)
        {
            pages.Add(i);
        }
    }
}
<style>
    /* Simplify the pagination styling */
    .pagination-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px; /* Add a small margin to ensure spacing */
        margin-bottom: 10px;
    }

    /* Ensure the pagination list is styled correctly */
    .pagination {
        margin: 0; /* Remove default margins */
    }

    /* Add spacing between the form and pagination links */
    .pagination-section .form-inline {
        margin-right: 15px;
    }
</style>
<div class="pagination-section">
    <div>
        <form asp-action="@action" asp-controller="@controller" method="get" class="form-inline">
            <input type="hidden" name="page" value="@Model.CurrentPage" />
            @foreach (var param in queryParams)
            {
                <input type="hidden" name="@param.Key" value="@param.Value" />
            }
            <label class="mr-2">@TranslationService.GetTranslation("ItemsPerPage", languageCode):</label>
            <select name="pageSize" class="form-select form-select-sm" onchange="this.form.submit()">
                @{
                    var is10Selected = Model.PageSize == 10 ? "selected" : "";
                    var is20Selected = Model.PageSize == 20 ? "selected" : "";
                    var is50Selected = Model.PageSize == 50 ? "selected" : "";
                }
                <option value="10" selected="@is10Selected">10</option>
                <option value="20" selected="@is20Selected">20</option>
                <option value="50" selected="@is50Selected">50</option>
            </select>
        </form>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const pageSizeSelect = document.querySelector('select[name="pageSize"]');
                pageSizeSelect.value = @Model.PageSize; // Force the correct value
            });
        </script>
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <!-- Nút Previous -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                @{
                    queryParams["page"] = (Model.CurrentPage - 1).ToString();
                    queryParams["pageSize"] = Model.PageSize.ToString();
                }
                <a class="page-link" href="@Url.Action(action, controller, queryParams)">@TranslationService.GetTranslation("Previous", languageCode)</a>
            </li>
           @*  @for (int i = 1; i <= Model.TotalPages; i++)
            {
                queryParams["page"] = i.ToString();
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action(action, controller, queryParams)">@i</a>
                </li>
            } *@
            <!-- Duyệt qua danh sách các trang cần hiển thị -->
            @foreach (var p in pages)
            {
                if (p == -1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                else
                {
                    <li class="page-item @(p == currentPage ? "active" : "")">
                        @{
                            queryParams["page"] = p.ToString();
                        }
                        <a class="page-link" href="@Url.Action(action, controller, queryParams)">@p</a>
                    </li>
                }
            }
            <!-- Nút Next -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                @{
                    queryParams["page"] = (Model.CurrentPage + 1).ToString();
                    queryParams["pageSize"] = Model.PageSize.ToString();
                }
                <a class="page-link" href="@Url.Action(action, controller, queryParams)">@TranslationService.GetTranslation("Next", languageCode)</a>
            </li>
        </ul>
    </nav>
</div>