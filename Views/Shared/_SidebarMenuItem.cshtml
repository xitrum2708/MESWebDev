@model FunctionModel

@{
    var activeMenuId = ViewData["ActiveMenuId"] as int?;
    var hasChildren = Model.Children != null && Model.Children.Any();
    var isActive = Model.Id == activeMenuId;

    // Hàm đệ quy kiểm tra xem menu hiện tại có chứa activeMenuId
    bool IsAncestor(FunctionModel menu, int? targetId)
    {
        if (menu.Id == targetId)
            return true;

        if (menu.Children != null)
        {
            foreach (var child in menu.Children)
            {
                if (IsAncestor(child, targetId))
                    return true;
            }
        }

        return false;
    }

    var isExpanded = IsAncestor(Model, activeMenuId);
}

<li class="nav-item @(hasChildren && isExpanded ? "menu-open" : "")">
    @* <a href="@(Model.Url ?? "#")" class="nav-link @(isActive ? "active" : "")"> *@
        <a href="@(string.IsNullOrEmpty(Model.Action) ? "#" : Url.Action(Model.Action,Model.Controller))" class="nav-link @(isExpanded ? "active" : "")">

        <i class="nav-icon @(Model.IconString ?? "bi bi-circle")"></i>
        <p>
            @Model.EnName
            @if (hasChildren)
            {
                <i class="nav-arrow bi bi-chevron-right"></i>
            }
        </p>
    </a>

    @if (hasChildren)
    {
        <ul class="nav nav-treeview ps-3">
            @foreach (var sub in Model.Children)
            {
                @await Html.PartialAsync("_SidebarMenuItem", sub)
            }
        </ul>
    }
</li>
