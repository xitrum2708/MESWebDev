@using MESWebDev.Common
@using MESWebDev.Models.IQC.VM
@using MESWebDev.Models.VM
@using MESWebDev.Services
@inject ITranslationService TranslationService
@model ReportIQCViewModel

@{
    var languageCode = Context.Session.GetString("LanguageCode") ?? "vi";
    ViewData["Title"] = TranslationService.GetTranslation("MenuManagement", languageCode);
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section ContentHeader {
    @await Html.PartialAsync("_Breadcrumb", ViewBag.Breadcrumbs as List<MESWebDev.DTO.BreadcrumbItemDto>)
}
<div class="app-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">                        
                        <div class="float-start">
                            <h3 class="card-title">Production Plan</h3>
                        </div>
                        <div class="float-end">
                            <a class="btn btn-info btn-sm bt_upload">Upload</a>
                            <a class="btn btn-secondary btn-sm bt_master">Master</a>
                        </div>
                    </div>
                    <div class="card-body">
                        @* <h2>Product Schedule (Resource Timeline View)</h2> *@
                        <div id='calendar'></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<Partial name="_Upload" />

@section Scripts {
    <script src="~/js/index.global.min.js"></script>
    <link href="~/css/prodplan.css" rel="stylesheet" />
    <script>
        // --- Show Upload Windows --- \\
        $('.bt_upload').click( function(){
             $('#uploadModal').modal('show');
            }
        )

        // --- Show Upload function --- \\
        function Upload() {
            const formData = new FormData();
            var file1 = document.getElementById("file1");
            var file2 = document.getElementById("file2");
            var file3 = document.getElementById("file3");
            if (!file1.files.length || !file2.files.length || !file3) {
                document.getElementById("result").innerText = "Please select all files!";
                return;
            }
            formData.append("file1", file1.files[0]);
            formData.append("file2", file2.files[0]);
            formData.append("file3", file3.files[0]);

            fetch('/ProdPlan/Upload', {
            method: 'POST',
            body: formData
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById("result").innerText = data;
            })
            .catch(error => {
            console.error('Upload error:', error);
                document.getElementById("result").innerText = "Upload failed!";
            });
        }
        
        // Test Holidays
        const holidays = ["2025-06-20","2025-06-21","2025-06-22"];

        // FullCalendar 
        document.addEventListener('DOMContentLoaded', function () {
          var calendarEl = document.getElementById('calendar');

          var calendar = new FullCalendar.Calendar(calendarEl, {
            schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
            locale: 'en-GB', // 👈 This sets the locale
            initialView: 'resourceTimelineDay',
            resourceAreaHeaderContent: 'Line No.',
            resourceAreaWidth: 'auto',
            resourceAreaWidth: '100px',
            aspectRatio: 2,
            editable: true,
            eventResizableFromStart: false,  // can't resize from start
            eventDurationEditable: false,     // 🔒 disable resizing completely
            contentHeight: 'auto',

            headerToolbar: {
              left: 'prev,next today',
              center: 'title',
              right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth'
            },
            //NEW
            buttonText: {
                today: 'Today',
              resourceTimelineDay: 'Day',
              resourceTimelineWeek: 'Week',
              resourceTimelineMonth: 'Month'
            },
            views: {
              resourceTimelineDay: {
                slotDuration: '01:00:00',
                snapDuration: '00:00:01',
                slotMinTime: '08:00:00',
                slotMaxTime: '17:00:00',
                slotLabelFormat: [{ year: 'numeric', month: '2-digit', day: '2-digit' }, // yyyy/MM/dd
                { hour: '2-digit', hour12: false } // HH
                ]

              },
              resourceTimelineWeek: {
                slotDuration: { days: 1 },
                slotLabelFormat: [{ year: 'numeric', month: '2-digit', day: '2-digit' }, // yyyy/MM/dd
                { weekday: 'short' } // HH
                ]
                //   slotLabelContent: function (arg) {
                //   const date = arg.date;
                //   const yyyy = date.getFullYear();
                //   const mm = String(date.getMonth() + 1).padStart(2, '0');
                //   const dd = String(date.getDate()).padStart(2, '0');
                //   const weekday = date.toLocaleDateString('en-US', { weekday: 'short' });
                //   return {
                //     html: `
                //       <div style="text-align:center; line-height: 1.2;">
                //         ${yyyy}/${mm}/${dd}<br>(${weekday})
                //       </div>
                //     `
                //   };
                // }
              },
              resourceTimelineMonth: {
                slotDuration: { days: 1 },
                slotMinWidth: 120, // give room for longer text
                slotLabelFormat: [
                { year: 'numeric', month: '2-digit' },
                  { day: '2-digit' }
                ]
              }
            },

            //---- OLD DISPLAY ----\\
            // slotLabelFormat: [
            //   { weekday: 'short', day: 'numeric', month: 'short' }, // Top row: date
            //   { hour: '2-digit', hour12: false }                    // Bottom row: hour only (e.g., 08, 09)
            // ],

            // resourceAreaColumns: [
            //   { field: 'title', headerContent: 'Product Name' },
            //   { field: 'quantity', headerContent: 'Quantity' },
            //   { field: 'productId', headerContent: 'Product ID' }
            // ],
            resources: [
              { id: 'prod-a', title: 'M01' },
              { id: 'prod-b', title: 'M02' },
              { id: 'prod-c', title: 'M03' }
            ],


            events: [
              {
                id: '1',
                resourceId: 'prod-a',
                title: 'Product A',
                quantity: '200',
                productId: 'PA-001',
                start: '2025-06-18T08:00:00',
                end: '2025-06-18T12:00:00',
                color: '#ff9999'
              },


              {
                id: '2',
                resourceId: 'prod-b',
                title: 'Product B',
                quantity: '200',
                productId: 'ODR-002',
                start: '2025-06-18T13:00:00',
                end: '2025-06-18T17:00:00',
                color: '#99ccff'
              }
              ,
              {
                id: '3',
                resourceId: 'prod-c',
                title: 'Product C',
                quantity: '200',
                productId: 'ODR-003',
                start: '2025-06-18T13:30:00',
                end: '2025-06-18T17:30:00',
                color: '#944eef'
              }
            ],
            eventContent: function (arg) {
              const title = arg.event.title; // Correct way to access title
              const { quantity, productId } = arg.event.extendedProps;

              return {
                html: `
                  <div style="
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    height: 100%;
                    text-align: center;
                    line-height: 1.4;
                    font-size: 12px;
                    padding: 4px;
                  ">
                    <strong>${title} (${quantity})</strong>
                  <div style="font-size: 11px; color: #666;">${productId}</div>
                  </div>
                `
              };
            },

            datesSet: function () {
            // Highlight holiday columns
            holidays.forEach(dateStr => {
            document.querySelectorAll(`[data-date='${dateStr}']`).forEach(cell => {
            cell.classList.add('fc-day-holiday');
            });
            });
            }


          });


          calendar.render();
        });
    </script>
}