@using MESWebDev.Common
@using MESWebDev.Models.IQC.VM
@using MESWebDev.Models.PE
@using MESWebDev.Models.ProdPlan
@using MESWebDev.Services
@using System.Data
@using System.Globalization
@inject ITranslationService TranslationService
@model PEViewModel

@{
    var languageCode = Context.Session.GetString("LanguageCode") ?? "vi";
    ViewData["Title"] = TranslationService.GetTranslation("MenuManagement", languageCode);
    Layout = "~/Views/Shared/_AdminLayout.cshtml";  

}
@section ContentHeader {
    @await Html.PartialAsync("_Breadcrumb", ViewBag.Breadcrumbs as List<MESWebDev.DTO.BreadcrumbItemDto>)
}
@try
{

    <div class="app-content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="float-start d-flex justify-content-center align-items-center">
                                <h3 class="card-title fw-bold fs-5">
                                    <i class="bi bi-stopwatch-fill"></i>
                                    Time Study
                                </h3>
                                <button  class="btn btn-warning btn-sm search-icon ms-5">
                                    <i class="bi bi-search" style="cursor: pointer;"></i>
                                    Search
                                </button>
                            </div>
                            <div class="float-end d-flex justify-content-center align-items-center">

                                <a class="btn btn-info btn-sm bt_upload me-2">
                                    <i class="bi bi-file-earmark-arrow-up"></i>
                                    Upload
                                </a>
                                <a class="btn btn-primary btn-sm bt_add me-2">
                                    <i class="bi bi-plus-circle"></i>
                                    Add
                                </a> 
                                @* <a asp-action="DownloadProdPlan" asp-controller="ProdPlan" class="btn btn-secondary btn-sm me-2"> *@

                                @* <a id="DeleteData" class="btn btn-danger btn-sm me-2">
                                    <i class="bi bi-trash3"></i>
                                    Delete
                                </a> *@
                                <a id="DownloadData" class="btn btn-secondary btn-sm me-2">
                                    <i class="bi bi-download"></i>
                                    Download
                                </a>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="ResultArea">
                                @if (Model.data == null)
                                {
                                    <h5 class="m-3">Click to <a class="btn btn-warning btn-sm" href="#">Search</a> button to show data.</h5>
                                }
                                else
                                {
                                    <partial name="TimeStudy/_Result" model="@Model" />
                                }
                            </div>                            
                            
                        </div>
                    </div>
                </div>
            </div>
            <Partial name="TimeStudy/__Upload" />
            @* <partial name="TimeStudy/_Edit" /> *@
            <Partial name="_LoadingPartial" />
            <partial name="TimeStudy/__Delete" />
            @* <partial name="TimeStudy/__Add" model="@Model"/> *@
            <div id="modalArea">
            </div>
        </div>
    </div>

}
catch(Exception ex)
{
    string t = ex.Message;
}

@section Scripts {
    <link href="~/css/pecss.css" rel="stylesheet" />
    <script src="~/js/loadingpage.js?@DateTime.Now.Ticks"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        // -------- COMBOBOX --------- \\


         //-------- This for header -------------------
        function refreshAllCombos(){
            $.getJSON("/PE/CbTimeStudy"
                ,{
                    customer: $("#ip_customer").val(),
                    section: $("#ip_section").val(),
                    model: $("#ip_model").val(),
                    b_model: $("#ip_bModel").val(),
                    lot_no: $("#ip_lotNo").val(),
                    pcb_name: $("#ip_pcbName").val(),
                    pcb_no: $("#ip_pcbNo").val()
                }
                ,function(data){
                    updateList($("#l_customer"), data.customers);
                    updateList($("#l_section"), data.sections);
                    updateList($("#l_unit"), data.units);
                    updateList($("#l_model"), data.models);
                    updateList($("#l_bModel"), data.bModels);
                    updateList($("#l_lotNo"), data.lotNos);
                    updateList($("#l_pcbNo"), data.pcbNos);
                    updateList($("#l_pcbName"), data.pcbNames)
                });
        }        
        function InitCombo(){
             bindInputAndList($("#ip_customer"), $("#l_customer"));
             bindInputAndList($("#ip_section"), $("#l_section"));
             bindInputAndList($("#ip_unit"), $("#l_unit"));
             bindInputAndList($("#ip_model"), $("#l_model"));
             bindInputAndList($("#ip_bModel"), $("#l_bModel"));
             bindInputAndList($("#ip_lotNo"), $("#l_lotNo"));
             bindInputAndList($("#ip_pcbName"), $("#l_pcbName"));
             bindInputAndList($("#ip_pcbNo"), $("#l_pcbNo"));
             // Initial load
             refreshAllCombos();
         }

        //-------- This for detail -------------------
        function refreshAllDtlCombos(){
                $.getJSON("/PE/CbTimeStudyDetail"
                  ,{
                   operation_name: $("#ip_operationName").val()
                  }
                  ,function(data){
                   updateList($("#l_operationName"), data.operationNames);
                   updateList($("#l_operationDtlName"), data.operationDtlNames)
                  });
        }
         function InitComboDtl(){
                bindInputAndList($("#ip_operationName"), $("#l_operationName"));
                bindInputAndList($("#ip_operationDtlName"), $("#l_operationDtlName"));
              // Initial load
               refreshAllDtlCombos();
          }

        //---------------------------------------

        function updateList($list, items) {
            $list.empty();
            $.each(items, function (i, item) {
                $list.append(`<li>${item}</li>`);
            });
        }

        function bindInputAndList($input, $list){
            // Filter list
            function filterList(){
                let filter = $input.val().toLowerCase();
                $list.show();
                $list.children("li").each(function(){
                    let text = $(this).text().toLowerCase();
                    $(this).toggle(text.includes(filter));
                });
            }

            // Typing
            $input.on("input", debounce(function(){
                //filterList();
                refreshAllCombos();
            }, 300));

            // Focus: show and filter
            $input.on("focus", function(){
                filterList();
            });

            // Blur: hide after short delay to allow click
            $input.on("blur", function(){
                setTimeout(function(){
                    $list.hide();
                }, 200);
            });

            // Selecting from list
            $list.on("click", "li", function () {
                $input.val($(this).text());
                $list.hide();
                refreshAllCombos();
                refreshAllDtlCombos();
            });
        }

        function debounce(fn, delay) {
            let timer = null;
            return function () {
                clearTimeout(timer);
                timer = setTimeout(fn, delay);
            };
        }


        //----END COMBOBOX ----------------------------------

        function ClickAddDetail(){
                  $.get('/PE/IniAddTimeStudyDetail')
                 .done(function(html){
                      $('#detailModalArea').html(html);
                     $('#addDetailModal').modal('show');
                     InitComboDtl();
                 })
                 .fail(function(){
                     toastr.error('Error to load Detail Modal','error');
                 });
        }

        //----------------- START COUNT TIME -----------------\\
        let timerInterval = null;
        let counter = 0;

        $(document).on('click', '.bt_timer', function () {
            var $btn = $(this);
            var $input = $($btn.data("input"));

            if ($btn.hasClass('btn-success')) {
                // --- START ---
                counter = 0; // reset counter
                $btn.removeClass('btn-success').addClass('btn-danger')
                    .html('<i class="bi bi-stop-circle"></i> Stop');

                timerInterval = setInterval(function () {
                    counter += 0.01; // add 0.01 sec every tick
                    $input.val(counter.toFixed(2));
                }, 10); // 10 ms = 0.01 sec
            }
            else {
                // --- STOP ---
                $btn.removeClass('btn-danger').addClass('btn-success')
                    .html('<i class="bi bi-play-circle"></i> Start');

                clearInterval(timerInterval);
                timerInterval = null;
                // counter stays in input
            }
        });
       // }
       
        //------- END COUNT TIME -------------------------------


        //-------------- GET DATA FOR STEP TABLE ------------------\\
        $(document).on('click', '#bt_AddOperation', () => {
            const $form = $('#fAddDetail');
            if ($form.valid()) {                
                $.post('/PE/AddTimeStudyStepDtl', $form.serialize(), res =>$('#tbodyTimeStudyStepDtlResult').html(res));
            } else {
                toastr.error('Please fill in all required fields.');
            }
        });

        //remove row
        $(document).on('click', '#removeStepDtl', function () {
            $(this).closest('tr').remove();
            // Re-index the first column
            reindexRows();
        });
        function reindexRows() {
            $("#tbodyTimeStudyStepDtlResult tr").each(function (i) {
                // update row number
                $(this).find("td:first").text(i + 1);

                // update input names
                $(this).find("input").each(function () {
                    let oldName = $(this).attr("name");
                    if (oldName) {
                        $(this).attr("name", oldName.replace(/\[\d+\]/, `[${i}]`));
                    }
                });
            });
        }

        //END STEP TABLE -----------------------------------------------------\\

        //GET DATA FOR DETAIL <table>
         $(document).on('click', '#btnAddDtl', () => {
            const $form = $('#fAddDetail');
            if ($form.valid()) {
                  $('#addDetailModal').modal('hide');
                  $.post('/PE/AddTimeStudyDtl', $form.serialize(), res =>$('#detailBody').html(res));
            } else {
                toastr.error('Please fill in all required fields.');
            }
        });


          function BtnSave(){
               if($('#fAdd').valid()){
                  var data = $('#fAdd').serialize();
                  $.ajax({
                        url: '/PE/AddTimeStudy',
                      type: 'Post',
                      data: data,
                      success: function (html) {
                          $('#addModal').modal('hide');
                          $('#ResultArea').html(html);

                          //Get error message if existed
                          var errorMsg = $('#ResultArea').find('#errorMsg').data('msg');
                          if (errorMsg) {
                              toastr.error(errorMsg, "Error");
                          }
                          toastr.success('Add successfully !','Success')
                      },
                      error: function () {
                          toastr.error('An error occurred while loading the edit form.');
                      }
                  });
              }
              else{
                  toastr.error("Please fill all fields.","Error");
                  return;
              }
           }

        // --- Show Upload Windows --- \\
        $('.bt_upload').click( function(){
             $('#uploadModal').modal('show');
        });


        $('#DownloadData').on('click', function () {
            const headers = [];
            $('table thead tr:first th .header-text').each(function () {
                //alert($(this).text().trim());
                headers.push($(this).text().trim());
            });

            const rows = [];
            $('table tbody tr:visible').each(function () {
                const rowData = [];
                $(this).find('td.body-text').each(function () {
                    rowData.push($(this).text().trim());
                });
                rows.push(rowData);
            });

            const payload = { headers: headers, rows: rows };

            $.ajax({
                url: '/PE/ExportToExcel',
                type: 'POST',
                data: JSON.stringify(payload),
                contentType: 'application/json',
                xhrFields: { responseType: 'blob' }, // important to download file'
                success: function (data) {
                const blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                //a.download = "FilteredData.xlsx";

                const now = new Date();
                const pad = (n) => n.toString().padStart(2, '0');
                const fileName = `TimeStudy_${now.getFullYear()}${pad(now.getMonth() + 1)}${pad(now.getDate())}${pad(now.getHours())}${pad(now.getMinutes())}${pad(now.getSeconds())}.xlsx`;

                a.download = fileName;
                document.body.appendChild(a);
                a.click();
                a.remove();
            }
            });
        });       

        // Delete data 
        $('#DeleteData').click(function(){
            if($('._cb:checked').length > 0){
                $('#deleteModal').modal('show');
            }
            else{
                toastr.error('Please select at least one record to delete.');
            }
        });

        $(document).on('click', '._cbAll', function () {
            const isChecked = $(this).is(':checked');
            $('._cb').prop('checked', isChecked);

            if(isChecked) {
                $('._cb').closest('tr').css('text-decoration','line-through');
            } else {
                $('._cb').closest('tr').css('text-decoration','none');
            }
            });

        $(document).on('click', '._cb', function () {
            const isChecked = $(this).is(':checked');
            if(isChecked) {
                $(this).closest('tr').css('text-decoration','line-through');
            } else {
                $(this).closest('tr').css('text-decoration','none');
            }
        });

        function Delete()
        {
            const ids = [];
            $('._cb:checked').each(function () {
                const id = parseInt($(this).siblings('._id').val());
                ids.push(id);
            });

            if (ids.length === 0) {
                toastr.error('Please select at least one record to delete.');
                return;
            }

            $.ajax({
                url: '/PE/DeleteTimeStudy',
                type: 'POST',
                data: JSON.stringify(ids),
                contentType: 'application/json',
                success: function (response) {
                    if (response.success) {
                        toastr.success('Selected records deleted successfully.');
                        // Optionally, refresh the table or remove deleted rows from the DOM
                        window.location.href = '@Url.Action("TimeStudy", "PE")';
                    } else {
                        toastr.error(response.message || 'An error occurred while deleting records.');
                    }
                },
                error: function () {
                    toastr.error('An error occurred while deleting records.');
                }
            });
        }

        $('.btn_edit').click(function(){
        const row = $(this).closest('tr');
        const id = row.find('._id').val();
        $.ajax({
                url: '/PE/GetTimeStudyDetail',
                type: 'GET',
                data: { id: id },
                success: function (html) {
                    $('#modalArea').html(html);
                    $('#editModal').modal('show');
                },
                error: function () {
                    toastr.error('An error occurred while loading the edit form.');
                }
            });
        });

        $('.bt_add').click(function(){
            $.ajax({
                url: '/PE/IniTimeStudy',
                type: 'GET',
                success: function (html) {
                    $('#modalArea').html(html);
                    $('#addModal').modal('show');
                    InitCombo();    
                },
                error: function () {
                    toastr.error('An error occurred while loading the add form.');
                }
            });
        });



        function Add(){

        }

        function LoadPageAgain(){
            $.ajax({
                url: '/PE/GetTimeStudy',
                type: 'GET',
                success: function (html) {
                    $('#addModal').modal('hide');
                    $('#editModal').modal('hide');
                    $('#ResultArea').html(html);
                },
                error: function () {
                    toastr.error('An error occurred while loading the edit form.');
                }
            });
        }

        // clear content of input
        $(document).on('click','.btn-clear',function(){
            var $ip = $(this).closest('.input-group').find('input');
            $ip.val('');
        })

    </script>
    
}