// <auto-generated />
using System;
using MESWebDev.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MESWebDev.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250909072425_addPEtbl")]
    partial class addPEtbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MESWebDev.Models.COMMON.UV_LOTCONTROL_MASTER", b =>
                {
                    b.Property<int>("LotControlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LotControlID"));

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PoNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ProDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Revised")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialEnd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialStart")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecialInfo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LotControlID");

                    b.HasIndex("LotNo")
                        .IsUnique();

                    b.ToTable("UV_LOTCONTROL_MASTER", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.COMMON.UV_LOTGENERALSUMMARY_MASTER", b =>
                {
                    b.Property<int>("SummaryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SummaryID");

                    b.HasIndex("LotNo");

                    b.ToTable("UV_LOTGENERALSUMMARY_MASTER", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.COMMON.UV_PRO_LINE_Model", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UV_PRO_LINE", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.COMMON.UploadFileMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("col_index")
                        .HasColumnType("int");

                    b.Property<string>("col_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("db_col_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("header_row")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Master_UploadFile_mst");
                });

            modelBuilder.Entity("MESWebDev.Models.ExecutionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationMs")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UVMES_ExecutionLog", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.MonthlyRejectRateModel", b =>
                {
                    b.Property<string>("ABBRE_GROUP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("APR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AUG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DEC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FEB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("JAN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("JUL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("JUN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MAR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MAY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NOV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OCT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SEP")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.TopSupplierErrorReportModel", b =>
                {
                    b.Property<string>("ABBRE_GROUP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ACCEPTED")
                        .HasColumnType("int");

                    b.Property<decimal>("RATE_ACCEPT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("REJECTED")
                        .HasColumnType("int");

                    b.Property<int>("TOTAL")
                        .HasColumnType("int");

                    b.Property<string>("VENDER_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ErrorsItemMaster", b =>
                {
                    b.Property<int>("ErrorCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorCodeID"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DescriptionVn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ErrorCodeID");

                    b.ToTable("UV_IQC_ErrorsItemMaster", "dbo");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_InspectionGroup", b =>
                {
                    b.Property<int>("InspectionGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionGroupID"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InspectionGroupID");

                    b.ToTable("UV_IQC_InspectionGroups");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ItemName", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ItemID");

                    b.HasIndex("GroupID");

                    b.HasIndex("ItemName")
                        .IsUnique();

                    b.ToTable("UV_IQC_ItemNames", "dbo");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_RESULT", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("abbre_group")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("abbre_group");

                    b.Property<DateTime?>("approve_rec_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("approve_rec_date");

                    b.Property<string>("approveby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("approveby");

                    b.Property<DateTime?>("approvedate")
                        .HasColumnType("datetime2")
                        .HasColumnName("approvedate");

                    b.Property<string>("approveremark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("approveremark");

                    b.Property<DateTime?>("checked_rec_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("checked_rec_date");

                    b.Property<string>("checkedby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("checkedby");

                    b.Property<DateTime?>("checkeddate")
                        .HasColumnType("datetime2")
                        .HasColumnName("checkeddate");

                    b.Property<string>("checkedremark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("checkedremark");

                    b.Property<string>("combinelottag")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("combinelottag");

                    b.Property<int?>("count_pono")
                        .HasColumnType("int")
                        .HasColumnName("count_pono");

                    b.Property<string>("finaljudment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("finaljudment");

                    b.Property<DateTime?>("inspection_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("inspection_date");

                    b.Property<string>("invoice")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("invoice");

                    b.Property<DateTime?>("iqc_rec_lottag")
                        .HasColumnType("datetime2")
                        .HasColumnName("iqc_rec_lottag");

                    b.Property<string>("iqc_rec_person")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("iqc_rec_person");

                    b.Property<string>("iqc_report_no")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("iqc_report_no");

                    b.Property<string>("iqc_status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("iqc_status");

                    b.Property<string>("judment")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("judment");

                    b.Property<string>("judment_approve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("judment_approve");

                    b.Property<string>("judment_send")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("judment_send");

                    b.Property<string>("location_rec")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("location_rec");

                    b.Property<int?>("lot_shortage")
                        .HasColumnType("int")
                        .HasColumnName("lot_shortage");

                    b.Property<string>("lotno")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("lotno");

                    b.Property<string>("name_inspection")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name_inspection");

                    b.Property<string>("ngmettingresult")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ngmettingresult");

                    b.Property<int?>("orgcount_pono")
                        .HasColumnType("int")
                        .HasColumnName("orgcount_pono");

                    b.Property<int?>("orgqty")
                        .HasColumnType("int")
                        .HasColumnName("orgqty");

                    b.Property<string>("part_group")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("part_group");

                    b.Property<string>("partcode")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("partcode");

                    b.Property<string>("partname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("partname");

                    b.Property<string>("partspec")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("partspec");

                    b.Property<string>("purchase_order")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("purchase_order");

                    b.Property<int?>("qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<DateTime?>("rcv_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("rcv_date");

                    b.Property<string>("remarkfinal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("remarkfinal");

                    b.Property<DateTime?>("send_rec_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("send_rec_date");

                    b.Property<string>("sendby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sendby");

                    b.Property<DateTime?>("senddate")
                        .HasColumnType("datetime2")
                        .HasColumnName("senddate");

                    b.Property<string>("sendremark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sendremark");

                    b.Property<string>("sendtype")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sendtype");

                    b.Property<long>("seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("seq"));

                    b.Property<string>("status_lottag")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status_lottag");

                    b.Property<string>("vender_code")
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)")
                        .HasColumnName("vender_code");

                    b.Property<string>("vender_name")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("vender_name");

                    b.Property<string>("yusen_invno")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("yusen_invno");

                    b.HasKey("id");

                    b.ToTable("UV_IQC_RESULT");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_Report", b =>
                {
                    b.Property<string>("ReportID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CheckerStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalJudgment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InspectionGroupID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LottagId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesReturn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POCount")
                        .HasColumnType("int");

                    b.Property<int>("POQty")
                        .HasColumnType("int");

                    b.Property<string>("PO_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportID");

                    b.HasIndex("InspectionGroupID");

                    b.ToTable("UV_IQC_Reports");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ReportFile", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReportID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UploadedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("FileID");

                    b.HasIndex("ReportID");

                    b.ToTable("UV_IQC_ReportFiles", "dbo");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ReportImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileExtention")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReportID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UploadedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ImageID");

                    b.HasIndex("ReportID");

                    b.ToTable("UV_IQC_ReportImages", "dbo");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ReportItem", b =>
                {
                    b.Property<int>("ReportItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportItemID"));

                    b.Property<int>("CRI")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErrorCodeID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Judgment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MAJ")
                        .HasColumnType("int");

                    b.Property<int>("MIN")
                        .HasColumnType("int");

                    b.Property<decimal>("NG_Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NG_Total")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SamplingSize")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standard")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportItemID");

                    b.HasIndex("ErrorCodeID");

                    b.HasIndex("ReportID");

                    b.ToTable("UV_IQC_ReportItems");
                });

            modelBuilder.Entity("MESWebDev.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("UVMES_Languages", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("ParentId");

                    b.ToTable("UVMES_Menus", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.MenuTranslation", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("UVMES_MenuTranslation", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.OQC.A_OperatorProcessData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BoxBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Checkert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateT")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Market")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberPCB")
                        .HasColumnType("int");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarkbyuser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReworkNumber")
                        .HasColumnType("int");

                    b.Property<string>("ReworkStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypePcb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wireless")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lotSMT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelSMT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("A_OperatorProcessData", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.OQC.EASTECH_OQC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Market")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCBCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EASTECH_OQC", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.PE.ManpowerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AssyCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("AssyHeadcount")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("BModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InsertCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("InsertHeadcount")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SclCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("SclHeadcount")
                        .HasColumnType("int");

                    b.Property<decimal>("SmtCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("SmtHeadcount")
                        .HasColumnType("int");

                    b.Property<string>("UModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedModelDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadFile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UV_PE_Manpower_tbl");
                });

            modelBuilder.Entity("MESWebDev.Models.PE.OperationDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("Master_Operation_Dtl");
                });

            modelBuilder.Entity("MESWebDev.Models.PE.OperationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Master_Operation_Hdr");
                });

            modelBuilder.Entity("MESWebDev.Models.PE.OperationTimeStudyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BcpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BcpNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Time01")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Time02")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Time03")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Time04")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Time05")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitQty")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OperationDetailId");

                    b.HasIndex("OperationId");

                    b.ToTable("UV_PE_OperationTimeStudy");
                });

            modelBuilder.Entity("MESWebDev.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionId");

                    b.ToTable("UVMES_Permissions", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.ProdPlan.CalendarModel", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_holiday")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("date");

                    b.ToTable("PP_Calendar_tbl");
                });

            modelBuilder.Entity("MESWebDev.Models.ProdPlan.ProdPlanModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("backgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bal_qty")
                        .HasColumnType("int");

                    b.Property<string>("borderColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capa_qty")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("end")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_fpp")
                        .HasColumnType("bit");

                    b.Property<bool>("is_new")
                        .HasColumnType("bit");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lot_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lot_size")
                        .HasColumnType("int");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("old_id")
                        .HasColumnType("int");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start_sch_dt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("working_hour")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("PP_ProdPlan_tbl");
                });

            modelBuilder.Entity("MESWebDev.Models.ProdPlan.ProdPlanParaModel", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("name");

                    b.ToTable("PP_Para_tbl");
                });

            modelBuilder.Entity("MESWebDev.Models.REPAIR.UV_REPAIRRESULT", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Alcohol")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Causetype")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DDRCHECK")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DDRDailyUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("DDRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DDRKeyin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DailyOutput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("DeptError")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Errorposition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Errortype")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Flux")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Linename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lot")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Other")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Partcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcbCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pcbtype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Process")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Qrcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Repairmethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soldermachine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Statusresult")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tinwire")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserDept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UV_REPAIRRESULT");
                });

            modelBuilder.Entity("MESWebDev.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("UVMES_Roles", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrantedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UVMES_RolePermissions", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.SMT.EASTECH_SMT_OUTPUT_Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dropcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Droppos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feeder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDpart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Partcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarkbyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lotSMT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelSMT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("programkey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EASTECH_SMT_OUTPUT", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.SMT.UVSMT_MODEL_MATRIX_MASTER", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ADD_Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Board_Pcs_Per_Sheet")
                        .HasColumnType("int");

                    b.Property<double>("CPH")
                        .HasColumnType("float");

                    b.Property<int>("Chips_Per_Board")
                        .HasColumnType("int");

                    b.Property<int>("Chips_Per_Model")
                        .HasColumnType("int");

                    b.Property<int>("Chips_Per_PCS")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DIP_mg")
                        .HasColumnType("int");

                    b.Property<string>("Finish_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GXH1_SIM_Time_Seconds")
                        .HasColumnType("float");

                    b.Property<string>("GXH3_SIM_Time_Seconds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key_Work")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Load_IC_OR_Jig_Check")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark_LotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Output_1h")
                        .HasColumnType("int");

                    b.Property<int>("Output_2h")
                        .HasColumnType("int");

                    b.Property<int>("Output_Day")
                        .HasColumnType("int");

                    b.Property<int>("Output_Night")
                        .HasColumnType("int");

                    b.Property<string>("PCB_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCB_Per_Model")
                        .HasColumnType("int");

                    b.Property<string>("PCB_SIDE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCB_TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Paste_mg")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RV_TYPE_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RV_TYPE_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reel_Of_Part_Qty")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoHS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SIM_OUT_PCS_Per_Hour")
                        .HasColumnType("int");

                    b.Property<string>("Solder_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TACT_Time_Seconds")
                        .HasColumnType("float");

                    b.Property<double?>("T_mm")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("X_mm")
                        .HasColumnType("float");

                    b.Property<double?>("Y_mm")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("UVSMT_MODEL_MATRIX_MASTER", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.SMT.tbl_EstechSerialGeneral_Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Customercode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateT")
                        .HasColumnType("datetime2");

                    b.Property<string>("DaysOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndOfYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCBCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Printstatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerialOfProduct")
                        .HasColumnType("int");

                    b.Property<string>("Serial_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soft_version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeksInYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("outputdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("outputdate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("printdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_EstechSerialGeneral", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.SPO.UV_SPO_MASTER_ALL_Model", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("BModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoice_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LotSMT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LotSize")
                        .HasColumnType("int");

                    b.Property<string>("Lot_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Originqty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PO_Rec")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Shipped_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Shipped_Qty")
                        .HasColumnType("int");

                    b.Property<string>("Womaterial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UV_SPO_MASTER_ALL", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.TELSTAR.TELSTAR_ASSY_Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TELSTAR_ASSY", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.TELSTAR.TELSTAR_DQC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TELSTAR_DQC", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.TELSTAR.TONLY_DQC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCBCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TONLY_DQC", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.Translation", b =>
                {
                    b.Property<int>("TranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranslationId"));

                    b.Property<string>("Keyvalue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TranslationId");

                    b.HasIndex("LanguageId");

                    b.ToTable("UVMES_Translations", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.UVASSY.UVAssyAllOutputResult", b =>
                {
                    b.Property<string>("BModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Div")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LotSize")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCBType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProdLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdQty")
                        .HasColumnType("int");

                    b.Property<string>("ProdSec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetQty")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.UVASSY.UVAssyErrorDetail", b =>
                {
                    b.Property<string>("Alcohol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Causetype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDRCHECK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DDRDailyUpdate")
                        .HasColumnType("int");

                    b.Property<string>("DDRDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDRKeyin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DailyOutput")
                        .HasColumnType("int");

                    b.Property<string>("DeptError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Errorposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Errortype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("No")
                        .HasColumnType("bigint");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Partcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcbCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pcbtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qrcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Repairmethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soldermachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statusresult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinwire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDept")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.UVASSY.UVAssyOutputDetail", b =>
                {
                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Carton")
                        .HasColumnType("int");

                    b.Property<string>("ChangeBatchTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dbox_Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keys")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keys2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model_Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("No")
                        .HasColumnType("bigint");

                    b.Property<string>("PackingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Qtyunit")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Unit_Carton")
                        .HasColumnType("int");

                    b.Property<string>("Unit_Serial")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.UVASSY.UVAssyProductResult", b =>
                {
                    b.Property<string>("BModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Div")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LotSize")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("No")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProdLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdQty")
                        .HasColumnType("int");

                    b.Property<int>("TargetQty")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.UVASSY.UVAssyProduction", b =>
                {
                    b.Property<int>("ErrorQuantity")
                        .HasColumnType("int");

                    b.Property<int>("OutputQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("LanguageId");

                    b.ToTable("UVMES_Users", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UVMES_UserRoles", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.WHS.UV_IQC_WHS_SORTING", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BalQty")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateCode")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IssueLot")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IssueQty")
                        .HasColumnType("int");

                    b.Property<string>("NLottagId")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NameSort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Packing")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QtyNG")
                        .HasColumnType("int");

                    b.Property<int>("QtyOK")
                        .HasColumnType("int");

                    b.Property<decimal>("RateSortNG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReportID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SLottagId")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SignQ")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SortingBy")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("SortingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SortingStatus")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Stock")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalAM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalManPower")
                        .HasColumnType("int");

                    b.Property<int>("TotalQtyReport")
                        .HasColumnType("int");

                    b.Property<int>("WaitSorting")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UV_IQC_WHS_SORTING", (string)null);
                });

            modelBuilder.Entity("MESWebDev.Models.WHS.WHS_IQC_CONTROL", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("IqcDateCheck")
                        .HasColumnType("datetime2")
                        .HasColumnName("IQC_DATE_CHECK");

                    b.Property<DateTime?>("IqcNhanLotTag")
                        .HasColumnType("datetime2")
                        .HasColumnName("IQC_NHAN_LOTTAG");

                    b.Property<string>("IqcPartStatus")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("IQC_PART_STATUS");

                    b.Property<string>("IqcPicCheck")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IQC_PIC_CHECK");

                    b.Property<string>("RecLocation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("REC_LOCATION");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("WhsGiaoLotTag")
                        .HasColumnType("datetime2")
                        .HasColumnName("WHS_GIAO_LOTTAG");

                    b.Property<DateTime?>("WhsNhanHang")
                        .HasColumnType("datetime2")
                        .HasColumnName("WHS_NHAN_HANG");

                    b.Property<string>("WhsPicRec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WHS_PIC_REC");

                    b.HasKey("ID");

                    b.ToTable("WHS_IQC_CONTROL");
                });

            modelBuilder.Entity("MESWebDev.Models.WHS.WHS_RECEIVING_TOTAL", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("(CONVERT( ,getdate(),(112))+'-')+right('00000'+CONVERT( ,NEXT VALUE FOR [seq_id],0),(5))");

                    b.Property<string>("AppvSpec")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AppvSpec");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATEDATE");

                    b.Property<string>("Fileupload")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Fileupload");

                    b.Property<string>("IQC_STATUS")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IQC_STATUS");

                    b.Property<string>("LOT_NO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOT_NO");

                    b.Property<DateTime?>("MFG")
                        .HasColumnType("datetime2")
                        .HasColumnName("MFG");

                    b.Property<string>("PACKING")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PACKING");

                    b.Property<string>("PART_CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PART_CODE");

                    b.Property<string>("PART_DESC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PART_DESC");

                    b.Property<string>("PART_LOCATION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PART_LOCATION");

                    b.Property<string>("PART_STATUS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PART_STATUS");

                    b.Property<DateTime?>("PRINTDATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("PRINTDATE");

                    b.Property<string>("PURCHASE_ORDER")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PURCHASE_ORDER");

                    b.Property<string>("QRcodecustomer")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("QRcodecustomer");

                    b.Property<double?>("QTY")
                        .HasColumnType("float")
                        .HasColumnName("QTY");

                    b.Property<double?>("QtyNG")
                        .HasColumnType("float")
                        .HasColumnName("QtyNG");

                    b.Property<double?>("QtyOK")
                        .HasColumnType("float")
                        .HasColumnName("QtyOK");

                    b.Property<DateTime?>("RECEIVED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("RECEIVED_DATE");

                    b.Property<string>("REMARK")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("REMARK");

                    b.Property<string>("SK_INVOICE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SK_INVOICE");

                    b.Property<string>("SPEC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SPEC");

                    b.Property<string>("SUPPLIER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SUPPLIER");

                    b.Property<string>("SUPPLIER_CODE")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SUPPLIER_CODE");

                    b.Property<string>("SUPPLIER_GROUP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SUPPLIER_GROUP");

                    b.Property<string>("SUPPLIER_INVOICE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SUPPLIER_INVOICE");

                    b.Property<string>("UPDATEBY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UPDATEBY");

                    b.Property<DateTime?>("USE_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("USE_DATE");

                    b.HasKey("ID");

                    b.ToTable("WHS_RECEIVING_TOTAL");
                });

            modelBuilder.Entity("MESWebDev.Models.COMMON.UV_LOTCONTROL_MASTER", b =>
                {
                    b.HasOne("MESWebDev.Models.SPO.UV_SPO_MASTER_ALL_Model", "SPO_MASTER")
                        .WithMany()
                        .HasForeignKey("LotNo")
                        .HasPrincipalKey("LotNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SPO_MASTER");
                });

            modelBuilder.Entity("MESWebDev.Models.COMMON.UV_LOTGENERALSUMMARY_MASTER", b =>
                {
                    b.HasOne("MESWebDev.Models.COMMON.UV_LOTCONTROL_MASTER", "UV_LOTCONTROL_MASTER")
                        .WithMany("UV_LOTGENERALSUMMARY_MASTER")
                        .HasForeignKey("LotNo")
                        .HasPrincipalKey("LotNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UV_LOTCONTROL_MASTER");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ItemName", b =>
                {
                    b.HasOne("MESWebDev.Models.IQC.UV_IQC_InspectionGroup", "InspectionGroup")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionGroup");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_Report", b =>
                {
                    b.HasOne("MESWebDev.Models.IQC.UV_IQC_InspectionGroup", "InspectionGroups")
                        .WithMany("Reports")
                        .HasForeignKey("InspectionGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionGroups");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ReportFile", b =>
                {
                    b.HasOne("MESWebDev.Models.IQC.UV_IQC_Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ReportImage", b =>
                {
                    b.HasOne("MESWebDev.Models.IQC.UV_IQC_Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ReportItem", b =>
                {
                    b.HasOne("MESWebDev.Models.IQC.UV_IQC_ErrorsItemMaster", "ErrorsItemMasters")
                        .WithMany("ReportItems")
                        .HasForeignKey("ErrorCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESWebDev.Models.IQC.UV_IQC_Report", "Reports")
                        .WithMany("ReportItems")
                        .HasForeignKey("ReportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ErrorsItemMasters");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("MESWebDev.Models.Menu", b =>
                {
                    b.HasOne("MESWebDev.Models.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MESWebDev.Models.MenuTranslation", b =>
                {
                    b.HasOne("MESWebDev.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESWebDev.Models.Menu", "Menu")
                        .WithMany("MenuTranslations")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MESWebDev.Models.PE.OperationDetailModel", b =>
                {
                    b.HasOne("MESWebDev.Models.PE.OperationModel", "OperationMaster")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationMaster");
                });

            modelBuilder.Entity("MESWebDev.Models.PE.OperationTimeStudyModel", b =>
                {
                    b.HasOne("MESWebDev.Models.PE.OperationDetailModel", "OperationDetailMaster")
                        .WithMany()
                        .HasForeignKey("OperationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESWebDev.Models.PE.OperationModel", "OperationMaster")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationDetailMaster");

                    b.Navigation("OperationMaster");
                });

            modelBuilder.Entity("MESWebDev.Models.RolePermission", b =>
                {
                    b.HasOne("MESWebDev.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESWebDev.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MESWebDev.Models.Translation", b =>
                {
                    b.HasOne("MESWebDev.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MESWebDev.Models.User", b =>
                {
                    b.HasOne("MESWebDev.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("MESWebDev.Models.UserRole", b =>
                {
                    b.HasOne("MESWebDev.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESWebDev.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MESWebDev.Models.COMMON.UV_LOTCONTROL_MASTER", b =>
                {
                    b.Navigation("UV_LOTGENERALSUMMARY_MASTER");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_ErrorsItemMaster", b =>
                {
                    b.Navigation("ReportItems");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_InspectionGroup", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("MESWebDev.Models.IQC.UV_IQC_Report", b =>
                {
                    b.Navigation("ReportItems");
                });

            modelBuilder.Entity("MESWebDev.Models.Menu", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("MenuTranslations");
                });

            modelBuilder.Entity("MESWebDev.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("MESWebDev.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MESWebDev.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
